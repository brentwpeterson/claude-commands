{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(git commit:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(mv:*)",
      "Bash(git tag:*)",
      "Bash(git checkout:*)",
      "Bash(git branch:*)",
      "Bash(chmod:*)",
      "Bash(/path/to/project/backend/tests/curl_scripts/tickets/test-assignable-users.sh)",
      "Bash(curl:*)",
      "Bash(docker exec:*)",
      "Bash(docker logs:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker compose:*)",
      "Read(//path/to/project/**)",
      "Bash(./run-all-tests.sh)",
      "Bash(./test-create.sh:*)",
      "Bash(docker ps:*)",
      "Bash(python3:*)",
      "Bash(git fetch:*)",
      "Bash(git rev-list:*)",
      "Bash(docker restart:*)",
      "Bash(docker start:*)",
      "Bash(/path/to/project/backend/tests/curl_scripts/topics/test-create.sh)",
      "Bash(find:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(done)",
      "Bash(grep:*)",
      "Bash(git pull:*)",
      "Bash(git merge:*)",
      "Bash(./tests/curl_scripts/tickets/v2-modular-tests/test-modules-validation.sh:*)",
      "Bash(./test-frontend-api.sh:*)",
      "Bash(cat:*)",
      "Bash(git log:*)",
      "Bash(do echo \"Updating $file...\")",
      "Bash(do echo \"Fixing $file...\")",
      "Bash(do echo \"=== $file ===\")",
      "Bash(do echo \"=== $project ===\")",
      "Bash(ls:*)",
      "Bash(git remote add:*)",
      "Bash(lsof:*)",
      "Bash(aws logs describe-log-groups:*)",
      "Bash(do echo \"=== $branch ===\")",
      "Bash(do echo \"=== Processing $branch ===\")",
      "Bash(npm run build:*)",
      "Bash(docker-compose restart:*)",
      "Bash(aws logs describe-log-streams:*)",
      "Bash(aws logs get-log-events:*)",
      "Bash(echo:*)",
      "WebFetch(domain:github.com)",
      "Bash(docker-compose:*)",
      "Bash(mongosh:*)",
      "Bash(TAG=\"your-deployment-tag-here\")",
      "Bash(git restore:*)",
      "Bash(aws s3api put-bucket-policy:*)",
      "Bash(/tmp/create-message-ticket.sh:*)",
      "Bash(gh run list:*)",
      "Read(//private/tmp/**)",
      "Bash(python:*)",
      "Bash(awk:*)",
      "Bash(git clone:*)",
      "Bash(./verify-setup.sh:*)",
      "WebSearch",
      "Bash(/tmp/debug-script.sh:*)",
      "Bash(bash:*)",
      "Bash(/tmp/test-default-pagination.sh:*)",
      "Bash(timeout:*)",
      "Bash(docker stop:*)",
      "Bash(aws efs create-access-point:*)",
      "Bash(aws ec2 describe-security-groups:*)",
      "Bash(aws ec2:*)",
      "Bash(aws ecs register-task-definition:*)",
      "Bash(aws ecs:*)",
      "Bash(docker build:*)",
      "Bash(TARGET_BRANCH=\"your-branch-name\")",
      "Bash(if git show-ref --verify --quiet refs/heads/$TARGET_BRANCH)",
      "Bash(then echo \"üìç Checking out existing local branch: $TARGET_BRANCH\")",
      "Bash(elif git show-ref --verify --quiet refs/remotes/origin/$TARGET_BRANCH)",
      "Bash(then echo \"üì• Creating local branch from remote: $TARGET_BRANCH\")",
      "Bash(else echo \"‚ùå ERROR: Branch '$TARGET_BRANCH' not found locally or on remote\")",
      "Bash(exit 1)",
      "Bash(fi)",
      "Bash(/bin/bash:*)",
      "Bash(aws servicediscovery list-namespaces:*)",
      "Bash(aws servicediscovery create-service )",
      "Bash(scutil:*)",
      "Bash(ping:*)",
      "Bash(traceroute:*)",
      "Bash(log show:*)",
      "Bash(system_profiler:*)",
      "Bash(./scripts/backup-local-db.sh:*)",
      "Bash(mongorestore:*)",
      "Bash(git stash push:*)",
      "Bash(zip -r project-export.zip project/ -x \"*.DS_Store\" \"*.git*\")",
      "Bash(git reset --hard COMMIT_HASH)",
      "Bash(sudo chown -R $USER:$GROUP .claude/)",
      "Bash(git switch your-feature-branch)",
      "Bash(sudo rm -rf .claude/README.md .claude/agents)",
      "Bash(if grep -q \"\\.claude\" .gitignore)",
      "Bash(then echo \"‚úÖ .claude already ignored\")",
      "Bash(else echo \"‚ùå .claude NOT ignored - needs to be added\")",
      "Bash(git rm -r --cached .claude)",
      "SlashCommand(/create-branch project todo/feature-document.md)",
      "Bash(DEPLOYMENT_TAG=\"your-deployment-tag\")",
      "Bash(aws ecr describe-repositories:*)",
      "Bash(aws efs describe-file-systems:*)",
      "Bash(aws servicediscovery list-services:*)",
      "Bash(aws elbv2 describe-load-balancers:*)",
      "Bash(aws secretsmanager list-secrets:*)",
      "Bash(aws iam list-roles:*)",
      "Bash(aws s3api list-buckets:*)",
      "Bash(aws elbv2 describe-target-groups:*)",
      "Bash(aws efs describe-access-points:*)",
      "Bash(aws route53:*)",
      "Bash(aws sesv2 list-email-identities:*)",
      "Bash(aws ecr describe-images:*)",
      "Bash(aws ce:*)",
      "Bash(docker volume:*)",
      "Bash(sudo rm:*)",
      "Bash(docker cp:*)",
      "Bash(sudo mkdir:*)"
    ],
    "deny": [],
    "ask": []
  }
}